package BlizzApi

// https://us.api.blizzard.com/data/wow/search/connected-realm?namespace=dynamic-us&status.type=UP&realms.timezone=America%2FNew_York&orderby=id&_page=1&access_token=UScLTNBQcZG6769i9diDjX5OSv6NGkTewL

type AutoGenerated struct {
	Page        int       `json:"page"`
	PageSize    int       `json:"pageSize"`
	MaxPageSize int       `json:"maxPageSize"`
	PageCount   int       `json:"pageCount"`
	Results     []Results `json:"results"`
}
type Key struct {
	Href string `json:"href"`
}
type Name struct {
	ItIT string `json:"it_IT"`
	RuRU string `json:"ru_RU"`
	EnGB string `json:"en_GB"`
	ZhTW string `json:"zh_TW"`
	KoKR string `json:"ko_KR"`
	EnUS string `json:"en_US"`
	EsMX string `json:"es_MX"`
	PtBR string `json:"pt_BR"`
	EsES string `json:"es_ES"`
	ZhCN string `json:"zh_CN"`
	FrFR string `json:"fr_FR"`
	DeDE string `json:"de_DE"`
}
type Region struct {
	Name Name `json:"name"`
	ID   int  `json:"id"`
}
type Category struct {
	ItIT string `json:"it_IT"`
	RuRU string `json:"ru_RU"`
	EnGB string `json:"en_GB"`
	ZhTW string `json:"zh_TW"`
	KoKR string `json:"ko_KR"`
	EnUS string `json:"en_US"`
	EsMX string `json:"es_MX"`
	PtBR string `json:"pt_BR"`
	EsES string `json:"es_ES"`
	ZhCN string `json:"zh_CN"`
	FrFR string `json:"fr_FR"`
	DeDE string `json:"de_DE"`
}
type Type struct {
	Name Name   `json:"name"`
	Type string `json:"type"`
}
type Realms struct {
	IsTournament bool     `json:"is_tournament"`
	Timezone     string   `json:"timezone"`
	Name         Name     `json:"name"`
	ID           int      `json:"id"`
	Region       Region   `json:"region"`
	Category     Category `json:"category"`
	Locale       string   `json:"locale"`
	Type         Type     `json:"type"`
	Slug         string   `json:"slug"`
}
type Status struct {
	Name Name   `json:"name"`
	Type string `json:"type"`
}
type Population struct {
	Name Name   `json:"name"`
	Type string `json:"type"`
}
type Data struct {
	Realms     []Realms   `json:"realms"`
	ID         int        `json:"id"`
	HasQueue   bool       `json:"has_queue"`
	Status     Status     `json:"status"`
	Population Population `json:"population"`
}
type Results struct {
	Key  Key  `json:"key"`
	Data Data `json:"data"`
}
